@model PaymentViewModel
@{
    this.ViewBag.Title = "Payment";
}
<style type="text/css">

    th {
        padding: 6px;
        margin: 6px
    }

    .modal-content {
        position: relative;
        display: flex;
        flex-direction: column;
        margin-top: 50%;
    }

    .modal-footer {
        padding-bottom: 2em;
    }

    .btn-spacing {
        margin-top: 1em;
        margin-bottom: 1em;
    }

</style>

<link rel="stylesheet" href="~/css/gamestore_globalweb.css" asp-append-version="true" />
<link rel="stylesheet" href="~/css/custom.css" asp-append-version="true" />

<div class="container">


    @if (TempData.ContainsKey(GlobalSuccessMessageKey))
    {
        <div class="alert alert-success text-center" role="alert">
            @TempData[GlobalSuccessMessageKey]
        </div>
    }
    @if (TempData.ContainsKey(GlobalErrorMessageKey))
    {
        <div class="alert alert-danger text-center" role="alert">
            @TempData[GlobalErrorMessageKey]
        </div>
    }

    <h2>Credit Card Information</h2>
    <p>Please note that only Visa and MasterCard credit cards are accepted.</p>


    <button type="button" class="btn btn-primary btn-spacing" data-toggle="modal" id="btnAdd" data-target="#creditCardModal">Add New Credit Card</button>


    <div id="payments-nav">
        <a class="btn btn-success" id="wish" asp-area="Home" asp-controller="Wishlist" asp-action="Index"><label>To Wishlist</label><span class="hovit"></span></a>
        <a class="btn btn-success" asp-area="Home" asp-controller="Cart" asp-action="Index"><label>To Cart</label><span class="hovit"></span></a>
    </div>


    @if (Model.CreditCards != null && Model.CreditCards.Any())
    {
        <table class="table table-hover">
            <thead>
                <tr>
                    <th>Issuer</th>
                    <th>Credit Card Number</th>
                    <th>Expiration Date</th>
                    <th></th>
                </tr>
            </thead>

            @foreach (var card in Model.CreditCards)
            {

                <thead>
                    <tr>
                    </tr>
                    <tr>
                        @if (card.CardNumber.StartsWith("4"))
                        {
                            <th><img src="~/images/CC/Visa.png" width="70" alt="Visa logo" class="img-responsive" /></th>
                        }
                        else if (card.CardNumber.StartsWith("5"))
                        {
                            <th><img src="~/images/CC/MasterCard.png" width="70" alt="Mastercard logo" class="img-responsive" /></th>
                        }

                        <th>@card.CardNumber</th>
                        <th>@card.ExpirationDate</th>
                        <th><a class="btn-danger btn" id="remove" asp-action="DeleteCreditCard" asp-route-id="@card.Id">Remove</a></th>

                    </tr>
                </thead>
                <tbody class="tbody"></tbody>
            }
        </table>
    }

    else
    {
        <p>Please add a payment method.</p>
    }

    <div class="modal fade" id="creditCardModal" role="dialog" aria-labelledby="creditCardModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="creditCardModalTitle">Add Credit Card</h4>
                    <button type="button" class="close" data-dismiss="modal">X</button>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="form-group">
                            <label for="creditCardNumber" class="modal-label">Credit Card Number&nbsp;<span style="color:red;font-weight:bolder"><sup>&#8902;</sup></span></label>
                            <input type="text" class="form-control" id="creditCardNumber" placeholder="Enter credit card number" />
                            <span id="cardNumberValidationError" class="modal-error"></span>
                        </div>
                        <div class="form-group">
                            <label for="expirationDate" class="modal-label">Expiration Date&nbsp;<span style="color:red;font-weight:bolder"><sup>&#8902;</sup></span></label>
                            <input type="text" class="date-picker form-control" id="expirationDate" autocomplete="off" placeholder='MM/YY' />
                            <span id="expDateValidationError" class="modal-error"></span>
                        </div>
                        <input type="hidden" id="creditCardId" />
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" id="modal-button" class="btn btn-primary" onclick="AddCreditCard();">Add</button>
                    <button type="button" id="modal-button" class="btn btn-danger" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
    @*<button type="button" class="btn btn-primary" id="btnBack" a href="@Url.Action("Index", "Cart")">Back To Cart</button>*@
</div>

<form method="post" id="antiForgeryForm"></form>
@section Scripts {

    <script src="~/js/Scripts/jquery-ui-1.12.1.js"></script>

    <script>
        $(document).ready(function () {

            $('.date-picker').datepicker({
                changeMonth: true,
                changeYear: true,
                showButtonPanel: true,
                dateFormat: 'mm/yy',
                yearRange: "-0:+10",
                onClose: function (dateText, inst) {
                    var month = $("#ui-datepicker-div .ui-datepicker-month :selected").val();
                    var year = $("#ui-datepicker-div .ui-datepicker-year :selected").val();
                    $(this).datepicker('setDate', new Date(year, month, 1));
                }
            });

            $('#creditCardModal').on('hidden.bs.modal', function (e) {
                clearModal();
            })

            $('#cardNumberValidationError').change(function () {
                $('#cardNumberValidationError').text('');
            });
            $('#creditCardNumber').change(function () {
                $('#cardNumberValidationError').text('');
            });
            $('#expirationDate').change(function () {
                $('#expDateValidationError').text('');
            });
        });


        function AddCreditCard() {
            var antiForgeryToken = $('#antiForgeryForm input[name=__RequestVerificationToken]').val();

            var cardNbr = $('#creditCardNumber').val();
            var validationErrorNbr = validateCardNumber(cardNbr);
            if (validationErrorNbr) {
                $('#cardNumberValidationError').text(validationErrorNbr);
            }

            var expDate = $('#expirationDate').val();
            var validationErrorDate = validateExpDate(expDate);
            if (validationErrorDate) {
                $('#expDateValidationError').text(validationErrorDate);
            }

            if (validationErrorNbr || validationErrorDate) {
                return false;
            }

            var ccObj = {
                CardNumber: cardNbr.replace(/\s+/g, ''),
                ExpirationDate: expDate
            };
            console.log(ccObj);
            $.ajax({
                headers: {
                    'X-CSRF-TOKEN': antiForgeryToken
                },
                url: "/Profile/AddCreditCard",
                data: JSON.stringify(ccObj),
                type: "POST",
                contentType: 'application/json',

                success: function (result) {
                    $('#creditCardModal').modal('hide');
                    location.reload();
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log(jqXHR);
                    console.log(textStatus);
                    console.log(errorThrown);
                },
            });
        }


        function deleteCreditCard(Id) {
            $.ajax({
                url: "/Profile/DeleteCreditCard/" + Id,
                contentType: "application/json",
                dataType: "json",
                success: function () {
                    location.reload();
                },
                error: function (result) {
                    alert(result.Error);
                }
            });
        }

        function validateCardNumber(cardNbr) {

            cardNbr = cardNbr.replace(/\s+/g, '');
            if (!cardNbr) {
                return 'The credit card number is required.';
            }

            // Visa
            var reg = new RegExp("^4[0-9]{12}(?:[0-9]{3})?$");
            if (reg.test(cardNbr)) {
                return;
            }
            // MasterCard
            reg = new RegExp("^(?:5[1-5][0-9]{2}|222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}$");
            if (reg.test(cardNbr)) {
                return;
            }

            return 'Please provide a valid credit card number.';
        }

        function validateExpDate(expDate) {
            if (!expDate) {
                return 'The expiration date is required.';
            }
            var date = expDate.split('/');
            if (date[0] < (new Date().getMonth()) - 1 && date[1] == new Date().getFullYear()) {
                return 'Your credit card has expired.';
            }
            return false;
        }

        function clearModal() {
            $('#creditCardModalTitle').text('Add Credit Card');
            $('#cardNumberValidationError').text('');
            $('#expDateValidationError').text('');
            $('#creditCardId').val("");
            $('#creditCardNumber').val("");
            $('#expirationDate').val("");
            $('#btnUpdate').hide();
            $('#btnAdd').show();
        }
    </script>
}